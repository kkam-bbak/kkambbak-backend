plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'com.epages.restdocs-api-spec' version '0.18.2'
}

group = 'com.kkambbak'
version = '0.0.1-SNAPSHOT'
description = 'kkambbak Project'

java {
	sourceCompatibility = '21'
	targetCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Logbook
	implementation 'org.zalando:logbook-spring-boot-starter:3.9.0'

	// Logstash
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

	// REST Docs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.2'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

ext {
	snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

openapi3 {
	title = 'Kkambbak API Document'
	description = 'Kkambbak Application API Document'
	version = '0.0.1'
	format = 'yaml'
}

tasks.register('copyOasToSwagger', Copy) {
	delete 'src/main/resources/static/swagger-ui/openapi3.yaml'
	from "${layout.buildDirectory.get()}/api-spec/openapi3.yaml"
	into "${layout.buildDirectory.get()}/resources/main/static/swagger-ui/."
	dependsOn 'openapi3'
}

tasks.resolveMainClassName {
	dependsOn 'copyOasToSwagger'
}

def querydslDir = "src/main/generated"

sourceSets {
	main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean {
	delete file(querydslDir)
}

bootJar {
	enabled = true
}

jar {
	enabled = false
}